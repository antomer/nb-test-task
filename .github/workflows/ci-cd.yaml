name: CI/CD task-3/app
on:
  pull_request:
    branches:
      - master
    paths:
      - task-3/app/**
      - .github/workflows/lint-test-app.yaml
  push:
    branches:
      - master
    paths:
      - task-3/app/**
      - .github/workflows/lint-test-app.yaml
jobs:
  lint-test:
    name: Lint & test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version-file: "task-3/app/.nvmrc"
          cache: "npm"
          cache-dependency-path: task-3/app/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: task-3/app/

      - name: Run lint
        run: npm run lint
        working-directory: task-3/app/

      - name: Run unit test
        run: npm run test
        working-directory: task-3/app/
  build:
    name: Build & push image
    needs: lint-test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get image tag
        id: get_image_tag
        run: echo "IMAGE_TAG=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_OUTPUT
      
      - name: Build Docker image
        run: |
          docker build -t antomer/nb-simple-service:${{ steps.get_image_tag.outputs.IMAGE_TAG }} 
        working-directory: task-3/app/

      - name: Login to Docker Hub 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Push Docker image
        run: |
          docker push antomer/nb-simple-service:${{ steps.get_image_tag.outputs.IMAGE_TAG }}
        working-directory: task-3/app/

  deploy:
    name: Deploy changes
    needs: lint-test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Push Docker image
        run: echo test
        working-directory: task-3/app/